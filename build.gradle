apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.7

repositories { mavenCentral() }

dependencies { testCompile 'junit:junit:4.+' }

if (!project.hasProperty('release')){
  ext.release = false;
}

if(!release){
  version = "$version-SNAPSHOT"
}

// These tasks are required for maven/sonatype
task docJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives docJar
  archives sourcesJar
}

signing {
  required { release && gradle.taskGraph.hasTask("uploadArchives") }
  sign configurations.archives
}

install {
  repositories.mavenInstaller { pom.artifactId = artifact }
}

uploadArchives {
  group 'build'
  description = "Does a maven deploy of archives artifacts"

  repositories {
    mavenDeployer {
      setUniqueVersion(false)

      configuration = configurations.archives

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      if (release) {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      }

      pom {
        artifactId = artifact
        project {
          name 'Java Directory Watcher'
          description 'Watch and receive notifications on filesystem changes using Java 7 NIO\'s WatchService'
          inceptionYear '2013'
          scm { url 'http://github.com/darylteo/directorywatcher' }

          developers {
            developer {
              id 'darylteo'
              name 'Daryl Teo'
              email 'i.am@darylteo.com'
            }
          }

          scm { url 'http://github.com/darylteo/directorywatcher' }

          licenses {
            license {
              name 'DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE'
              url 'http://www.wtfpl.net/txt/copying/'
              distribution 'repo'
            }
          }
          properties { setProperty('project.build.sourceEncoding', 'UTF8') }
        }
      }
    }
  }
}