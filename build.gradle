buildscript {
  repositories { mavenCentral() }
  dependencies { classpath 'org.ajoberstar:gradle-git:0.6.3' }
}

import org.ajoberstar.gradle.git.tasks.*

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'github-pages'

sourceCompatibility = 1.7

repositories { mavenCentral() }

configurations {
  provided
  archives
}

dependencies { testCompile 'junit:junit:4.+' }

if (!project.hasProperty('release')){
  ext.release = false
}

def release = this.version.endsWith('-SNAPSHOT')

// These tasks are required for maven/sonatype
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

def info = {
  resolveStrategy = Closure.DELEGATE_FIRST

  name 'Java Directory Watcher'
  description 'Watch and receive notifications on filesystem changes using Java 7 NIO\'s WatchService'
  inceptionYear '2013'
  url 'http://github.com/darylteo/directory-watcher'

  developers {
    developer {
      id 'darylteo'
      name 'Daryl Teo'
      email 'i.am@darylteo.com'
    }
  }

  scm { url 'http://github.com/darylteo/directory-watcher' }

  licenses {
    license {
      name 'DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE'
      url 'http://www.wtfpl.net/txt/copying/'
      distribution 'repo'
    }
  }

  properties { 'project.build.sourceEncoding' 'UTF8'  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      def url = release ? 'https://oss.sonatype.org/content/repositories/snapshots/' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      repository(url: url) {
        authentication(userName: sonatypeUsername, password : sonatypePassword)
      }

      configuration = configurations.archives

      pom {
        groupId = project.group
        version = project.version
        artifactId = project.name

        project info
      }
    }
  }
}

githubPages {
  repoUri = 'git@github.com:darylteo/directory-watcher.git'

  pages {
    from(javadoc) { into 'javadoc/current/' }
    from(javadoc) {
      // remove -SNAPSHOT from the version if it exists
      def _v = project.version - ~/-SNAPSHOT$/
      into "javadoc/$_v"
    }
  }
}